---
title: "Exploratory Data Analysis"
format: 
  revealjs:
    theme: [default, inverse.scss]
    navigation-mode: vertical
---

```{r, echo = F, include = F}
library(ggplot2)
theme_set(theme_bw())
library(datasauRus)
library(tibble)
library(dplyr)
library(tidyr)
library(magrittr)
```
```{python, echo = F, include = F}
import matplotlib.pyplot as plt
import seaborn as sns
import seaborn.objects as so
```

```{r, include = F}
new_data <- read.csv("../data/new_data.csv")
new_data_na_omit <- na.omit(new_data)
```

> "Far better an approximate answer to the right question, which is often vague, than an exact answer to the wrong question, which can always be made precise."
> 
> â€” John Tukey

## Guiding Questions

- What does this data have to tell me about the topic?

- Is the data reliable?

- Is the data complete?

- How are the variables distributed?

- How are the variables related?


## Question Generation

- Does the structure of the data match your expectations?

- Did the data read in correctly?

- How does the data fit in context?

- Do the observations make sense? 

    - scale
    - missingness
    - relationships with other variables


# Numerical EDA

- Basic summary statistics

- Made easier with tools like `skimr` and `skimpy` that tabulate summaries and sparkline charts

```{r}
#| echo: true
#| results: false
library(skimr)
skim(new_data)
```

## Numerical EDA {.smaller}

```{r}
#| echo: false
library(skimr)
summary(skim(new_data))
```

## Numerical EDA {.smaller}

```{r}
#| echo: false
#| include: false
library(skimr)
get_first_bit <- function(x) {
  tmp <- partition(x)[[1]]
  names(tmp)[1] <- "var"
  list(tmp[,1:3], tmp[,c(1, 4:8)])
}
res <- skim(new_data) |> get_first_bit() |> purrr::map(knitr::kable) 
```

```{r}
#| echo: false
#| results: markup
res[[1]]
```
```{r}
#| echo: false
#| results: markup
res[[2]]
```


## Numerical EDA {.smaller}

```{r}
#| echo: false
#| include: false
library(skimr)
get_sec_bit <- function(x) {
  tmp <- partition(x)[[2]]
  names(tmp)[1] <- "var"
  list(tmp[,1:5], tmp[,c(1, 6:11)])
}
res <- skim(new_data) |> get_sec_bit() |> purrr::map(knitr::kable) 
```
```{r}
#| echo: false
#| results: markup
res[[1]]
```
```{r}
#| echo: false
#| results: markup
res[[2]]
```


# Graphical EDA

- Start with single variables (1D summaries)

- Add in factor variables (Conditional 1D summaries)

- Move to 2D summaries and pairwise scatterplots

- For high dimensional numerical data, consider dimension reduction techniques (PCA, t-SNE, UMAP)

- Be careful to notice/account for missing values
    - `naniar` and `visdat` R packages
    - `missingno` in python


## Graphical EDA

```{r}
#| echo: true
#| fig-width: 9
#| fig-height: 4.5
#| out-width: 100%
library(visdat)
vis_dat(new_data) + 
  # Make color values a bit more colorblind friendly
  scale_fill_manual(values = c("#d73027", "#4575b4"), 
                    na.value = "#AAAAAA")
```


## Graphical EDA

```{r}
#| fig-width: 9
#| fig-height: 4.5
#| out-width: 100%
#| echo: true
#| output-location: fragment
new_data |> 
  pivot_longer(-group, names_to = "var", values_to = "value") |>
  ggplot() + geom_boxplot(aes(x = value)) + facet_grid(var~.)
```

## Graphical EDA

```{r}
#| fig-width: 9
#| fig-height: 4.5
#| out-width: 100%
#| echo: true
#| output-location: fragment
new_data |>
  pivot_longer(-group, names_to = "var", values_to = "value") |>
  ggplot() + geom_boxplot(aes(x = group, y = value)) + facet_grid(var~.)
```



## Graphical EDA

```{r}
#| echo: true
#| fig-width: 9
#| fig-height: 4.5
#| output-location: fragment
new_data |>
  mutate(missing_val = is.na(V1) | is.na(V2)) |>
  ggplot() + geom_bar(aes(x = group, fill = missing_val))
```


## Graphical EDA

```{r}
#| fig-width: 4.5
#| fig-height: 4.5
#| out-width: 100%
#| echo: true
#| output-location: column-fragment
library(naniar)
new_data |>
  ggplot(aes(x = V1, y = V2)) + 
  geom_miss_point() + 
  ggtitle(paste(
    "naniar package:",
    "Include missing vars")) + 
  theme(legend.position = 
          "bottom")
```


## Graphical EDA

```{r}
#| fig-width: 9
#| fig-height: 4
#| out-width: 100%
#| echo: true
#| output-location: fragment
new_data |>
  ggplot(aes(x = V1, y = V2)) + geom_miss_point(size = .6) + 
  facet_wrap(~group, nrow = 2) + 
  ggtitle("naniar package: Include missing variables") + 
  theme(legend.position = c(1, 1.25), legend.justification = c(1, 1.25),
        legend.direction = "horizontal")
```


# Your Turn {.inverse}

## Your Turn {.inverse}

Dataset: US County-level data, https://shorturl.at/U9KUO

About the data: https://github.com/evangambit/JsonOfCounties

Read in the data in your favorite software and pick an interesting set of variables.

Generate some questions to explore using EDA skills.

Use numerical and graphical summaries to answer your questions.


## Your Turn {.inverse}


Options: 
- County geometry
- Weather (NOAA)
- Demographics (Census)
- Cause of death (CDC, averaged 1999-2019)
- Employment (BLS)
- Police Shootings (Wash Post)
- Average Income (BEA)
- COVID deaths (USAFacts/CDC)
- Election Results

